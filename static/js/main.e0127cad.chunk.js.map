{"version":3,"sources":["constants/particles.js","components/background.js","components/fontawesome.js","components/infobox.js","App.js","serviceWorker.js","index.js"],"names":["config","particles","number","value","density","enable","value_area","size","color","animation","speed","sync","line_linked","distance","opacity","width","move","interactivity","events","onhover","mode","onclick","modes","grab","bubble","duration","repulse","push","particles_nb","remove","AppBackGround","Fragment","params","particlesConfig","id","className","React","Component","library","add","faGithubAlt","faLinkedinIn","faTelegramPlane","faSkype","InfoBox","src","alt","href","target","rel","icon","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qPAAaA,EAAS,CACpBC,UAAW,CACTC,OAAQ,CACNC,MAAO,GACPC,QAAS,CACPC,QAAQ,EACRC,WAAY,OAGhBC,KAAM,CACJJ,MAAO,GAETK,MAAO,CACLL,MAAO,OACPM,UAAW,CACTJ,QAAQ,EACRK,MAAO,IACPC,MAAM,IAGVC,YAAa,CACXP,QAAQ,EACRQ,SAAU,IACVL,MAAO,OACPM,QAAS,GACTC,MAAO,GAETC,KAAM,CACJX,QAAQ,EACRK,MAAO,IAGXO,cAAe,CACbC,OAAQ,CACNC,QAAS,CACPd,QAAQ,EACRe,KAAM,WAERC,QAAS,CACPhB,QAAQ,EACRe,KAAM,QAER,QAAU,GAEZE,MAAO,CACLC,KAAM,CACFV,SAAU,IACVD,YAAa,CACTE,QAAS,MAGjBU,OAAQ,CACJX,SAAU,IACVN,KAAM,GACNkB,SAAU,IAEdC,QAAS,CACLb,SAAU,GACVY,SAAU,GAEdE,KAAM,CACFC,aAAc,GAElBC,OAAQ,CACJD,aAAc,MC7CTE,E,uKAZX,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAWC,OAAQC,IACnB,yBAAKC,GAAG,SAASC,UAAU,UAC3B,yBAAKD,GAAG,SAASC,UAAU,UAC3B,yBAAKD,GAAG,SAASC,UAAU,e,GAPPC,IAAMC,W,gCCFlCC,IAAQC,IACNC,IACAC,IACAC,IACAC,K,ICkDaC,E,uKAlDX,OACE,kBAAC,IAAD,KACE,yBAAKT,UAAU,aACb,yBAAKA,UAAU,UACb,yBAAKU,IAA8B,qBAAsBC,IAAI,YAG/D,yBAAKX,UAAU,YACb,oEACA,iDACA,uBAAGA,UAAU,MAAMY,KAAK,oCAAxB,6BACA,uBAAGA,KAA+B,2BAA4BC,OAAO,UAArE,sBAIJ,yBAAKb,UAAU,cACb,yBAAKA,UAAU,kBAEb,uBAAGA,UAAU,gBAAgBa,OAAO,SAASC,IAAI,sBAAsBF,KAAK,gDAC1E,yBAAKZ,UAAU,wBACb,kBAAC,IAAD,CAAiBe,KAAM,CAAC,MAAO,mBAInC,uBAAGf,UAAU,gBAAgBa,OAAO,SAASC,IAAI,sBAAsBF,KAAK,oCAC1E,yBAAKZ,UAAU,sBACb,kBAAC,IAAD,CAAiBe,KAAM,CAAC,MAAO,kBAInC,uBAAGf,UAAU,gBAAgBc,IAAI,sBAAsBF,KAAK,wBAC1D,yBAAKZ,UAAU,wBACb,kBAAC,IAAD,CAAiBe,KAAM,CAAC,MAAO,sBAInC,uBAAGf,UAAU,gBAAgBc,IAAI,sBAAsBF,KAAK,0BAC1D,yBAAKZ,UAAU,qBACb,kBAAC,IAAD,CAAiBe,KAAM,CAAC,MAAO,oB,GAxCzBd,IAAMC,WCSbc,MATf,WACE,OACE,yBAAKhB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGciB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.e0127cad.chunk.js","sourcesContent":["export const config = {\r\n  particles: {\r\n    number: {\r\n      value: 80,\r\n      density: {\r\n        enable: true,\r\n        value_area: 1200\r\n      }\r\n    },\r\n    size: {\r\n      value: 2\r\n    },\r\n    color: {\r\n      value: \"#fff\",\r\n      animation: {\r\n        enable: false,\r\n        speed: 200,\r\n        sync: true\r\n      },\r\n    },\r\n    line_linked: {\r\n      enable: true,\r\n      distance: 120,\r\n      color: \"#fff\",\r\n      opacity: 0.5,\r\n      width: 1\r\n    },\r\n    move: {\r\n      enable: true,\r\n      speed: 4,\r\n    },\r\n  },\r\n  interactivity: {\r\n    events: {\r\n      onhover: {\r\n        enable: true,\r\n        mode: \"repulse\",\r\n      },\r\n      onclick: {\r\n        enable: true,\r\n        mode: \"push\"\r\n      },\r\n      \"resize\": true\r\n    },\r\n    modes: {\r\n      grab: {\r\n          distance: 180,\r\n          line_linked: {\r\n              opacity: 0.35\r\n          }\r\n      },\r\n      bubble: {\r\n          distance: 200,\r\n          size: 80,\r\n          duration: 0.4\r\n      },\r\n      repulse: {\r\n          distance: 80,\r\n          duration: 5\r\n      },\r\n      push: {\r\n          particles_nb: 4\r\n      },\r\n      remove: {\r\n          particles_nb: 2\r\n      }\r\n  }\r\n  }\r\n}","import React from 'react';\r\nimport Particles from 'react-particles-js';\r\nimport { particlesConfig } from \"../constants\";\r\n\r\n\r\nclass AppBackGround extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Particles params={particlesConfig} />\r\n        <div id=\"stars1\" className=\"stars\"></div>\r\n        <div id=\"stars2\" className=\"stars\"></div>\r\n        <div id=\"stars3\" className=\"stars\"></div>\r\n      </React.Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppBackGround;","import { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faGithubAlt, faLinkedinIn, faSkype, faTelegramPlane } from '@fortawesome/free-brands-svg-icons';\r\n\r\nlibrary.add(\r\n  faGithubAlt,\r\n  faLinkedinIn,\r\n  faTelegramPlane,\r\n  faSkype,\r\n);","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './fontawesome';\r\n\r\nclass InfoBox extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"container\">\r\n          <div className=\"avatar\">\r\n            <img src={process.env.PUBLIC_URL + \"/images/avatar.jpg\"} alt=\"avatar\" />\r\n          </div>\r\n\r\n          <div className=\"headline\">\r\n            <h1>Nguyễn Vũ Quyền (Leo)</h1>\r\n            <h2>Software Engineer</h2>\r\n            <a className=\"mb5\" href=\"mailto:leo.quyennguyen@gmail.com\">leo.quyennguyen@gmail.com</a>\r\n            <a href={process.env.PUBLIC_URL + \"/docs/QuyenNguyen_CV.pdf\"} target=\"_blank\">Curriculum Vitae</a>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"social-box\">\r\n          <div className=\"social-buttons\">\r\n\r\n            <a className=\"social-margin\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/leo-quyennguyen/\">\r\n              <div className=\"social-icon linkedin\">\r\n                <FontAwesomeIcon icon={['fab', 'linkedin-in']} />\r\n              </div>\r\n            </a>\r\n\r\n            <a className=\"social-margin\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/quyennguyenvu\">\r\n              <div className=\"social-icon github\">\r\n                <FontAwesomeIcon icon={['fab', 'github-alt']} />\r\n              </div>\r\n            </a>\r\n\r\n            <a className=\"social-margin\" rel=\"noopener noreferrer\" href=\"https://t.me/Quyennv\">\r\n              <div className=\"social-icon telegram\">\r\n                <FontAwesomeIcon icon={['fab', 'telegram-plane']} />\r\n              </div>\r\n            </a>\r\n\r\n            <a className=\"social-margin\" rel=\"noopener noreferrer\" href=\"skype:vq.leonardo?chat\">\r\n              <div className=\"social-icon skype\">\r\n                <FontAwesomeIcon icon={['fab', 'skype']} />\r\n              </div>\r\n            </a>\r\n\r\n          </div>\r\n        </div>\r\n\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InfoBox;","import React from 'react';\r\nimport './App.css';\r\nimport AppBackground from './components/background'\r\nimport InfoBox from './components/infobox'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <AppBackground />\r\n      <InfoBox />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}